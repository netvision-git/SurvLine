using Microsoft.VisualBasic.Logging;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.Window;

namespace SurvLine
{
    public class ProgressInterface
    {
        //==========================================================================================
        /*[VB]
        '*******************************************************************************
        'プログレスインターフェース

        Option Explicit
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        //==========================================================================================

        //==========================================================================================
        /*[VB]
        'プロパティ
        Public CancelEnable As Boolean 'キャンセルの可否。
        Public Prompt As String 'プロンプト。
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        //'プロパティ
        public bool CancelEnable;   //'キャンセルの可否。
        public string Prompt;       //'プロンプト。
        //==========================================================================================

        //==========================================================================================
        /*[VB]
        'プログレス最小値。
        Property Let MinPos(Optional ByVal nIndex As Long = 0, ByVal nPos As Integer)
        End Property
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        //'プログレス最小値。
        //public void MinPos(long nIndex = 0, int nPos)
        public void MinPos(int nPos, long nIndex = 0)
        {
            return;
        }
        //==========================================================================================

        //==========================================================================================
        /*[VB]
        'プログレス最小値。
        Property Get MinPos(Optional ByVal nIndex As Long = 0) As Integer
        End Property
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        //'プログレス最小値。
        public int MinPos(long nIndex = 0)
        {
            return 0;
        }
        //==========================================================================================

        //==========================================================================================
        /*[VB]
        'プログレス最大値。
        Property Let MaxPos(Optional ByVal nIndex As Long = 0, ByVal nPos As Integer)
        End Property
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        //'プログレス最大値。
        //public void MaxPos(long nIndex = 0, int nPos)
        public void MaxPos(int nPos, long nIndex = 0)
        {
            return;
        }
        //==========================================================================================

        //==========================================================================================
        /*[VB]
        'プログレス最大値。
        Property Get MaxPos(Optional ByVal nIndex As Long = 0) As Integer
        End Property
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        //'プログレス最大値。
        public int MaxPos(long nIndex = 0)
        {
            return 0;
        }
        //==========================================================================================

        //==========================================================================================
        /*[VB]
        'プログレス現在値。
        Property Let CurPos(Optional ByVal nIndex As Long = 0, ByVal nPos As Integer)
        End Property
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        //'プログレス現在値。
        //public void CurPos(long nIndex = 0, int nPos)
        public void CurPos(int nPos, long nIndex = 0)
        {
            return;
        }
        //==========================================================================================

        //==========================================================================================
        /*[VB]
        'プログレス現在値。
        Property Get CurPos(Optional ByVal nIndex As Long = 0) As Integer
        End Property
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        //'プログレス現在値。
        public int CurPos(long nIndex = 0)
        {
            return 0;
        }
        //==========================================================================================

        //==========================================================================================
        /*[VB]
        'キャンセル。
        Property Get Cancel() As Boolean
        End Property
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        //'キャンセル。
        public bool Cancel()
        {
            return true;
        }
        //==========================================================================================

        //==========================================================================================
        /*[VB]
        'キャンセルを設定する。
        '
        '引き数：
        'bCancel キャンセルフラグ。True=キャンセル。False=続行。
        Public Sub SetCancel(Optional ByVal bCancel As Boolean = True)
        End Sub
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        /*
        'キャンセルを設定する。
        '
        '引き数：
        'bCancel キャンセルフラグ。True=キャンセル。False=続行。
        */
        public void SetCancel(bool bCancel = true)
        {
            return;
        }
        //==========================================================================================

        //==========================================================================================
        /*[VB]
        'キャンセルをチェックする。
        '
        '戻り値：
        'キャンセルの場合 True を返す。
        'それ以外の場合 False を返す。
        Public Function CheckCancel() As Boolean
        End Function
        [VB]*/
        //------------------------------------------------------------------------------------------
        //[C#]
        /*
        'キャンセルをチェックする。
        '
        '戻り値：
        'キャンセルの場合 True を返す。
        'それ以外の場合 False を返す。
        */
        public bool CheckCancel()
        {
            return true;
        }
        //==========================================================================================
    }
}
